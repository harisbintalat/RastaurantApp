[{"E:\\Study\\React\\confusion\\src\\index.js":"1","E:\\Study\\React\\confusion\\src\\App.js":"2","E:\\Study\\React\\confusion\\src\\reportWebVitals.js":"3","E:\\Study\\React\\confusion\\src\\shared\\dishes.js":"4","E:\\Study\\React\\confusion\\src\\components\\DishdetailComponent.js":"5","E:\\Study\\React\\confusion\\src\\components\\MainComponent.js":"6","E:\\Study\\React\\confusion\\src\\components\\headercomponent.js":"7","E:\\Study\\React\\confusion\\src\\components\\MenuComponent.js":"8","E:\\Study\\React\\confusion\\src\\components\\Headercomponent.js":"9","E:\\Study\\React\\confusion\\src\\components\\FooterComponent.js":"10","E:\\Study\\React\\confusion\\src\\components\\HomeComponent.js":"11","E:\\Study\\React\\confusion\\src\\components\\ContactComponent.js":"12","E:\\Study\\React\\confusion\\src\\shared\\comments.js":"13","E:\\Study\\React\\confusion\\src\\shared\\promotions.js":"14","E:\\Study\\React\\confusion\\src\\shared\\leaders.js":"15","E:\\Study\\React\\confusion\\src\\components\\AboutComponent.js":"16","E:\\Study\\React\\confusion\\src\\components\\button.js":"17"},{"size":643,"mtime":1635577859605,"results":"18","hashOfConfig":"19"},{"size":628,"mtime":1640769965826,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1490,"mtime":1635674396751,"results":"22","hashOfConfig":"19"},{"size":2473,"mtime":1635800993325,"results":"23","hashOfConfig":"19"},{"size":2543,"mtime":1640754451748,"results":"24","hashOfConfig":"19"},{"size":1113,"mtime":1635580200464,"results":"25","hashOfConfig":"26"},{"size":1209,"mtime":1635913669453,"results":"27","hashOfConfig":"19"},{"size":5318,"mtime":1640760490376,"results":"28","hashOfConfig":"19"},{"size":2655,"mtime":1640761291340,"results":"29","hashOfConfig":"19"},{"size":1097,"mtime":1640754158832,"results":"30","hashOfConfig":"19"},{"size":9845,"mtime":1637607487375,"results":"31","hashOfConfig":"19"},{"size":4279,"mtime":1635671545746,"results":"32","hashOfConfig":"19"},{"size":445,"mtime":1635671491872,"results":"33","hashOfConfig":"19"},{"size":2382,"mtime":1635671525481,"results":"34","hashOfConfig":"19"},{"size":4566,"mtime":1635914159975,"results":"35","hashOfConfig":"19"},{"size":480,"mtime":1640769645211,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"11xdy6j",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1413o1d",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"E:\\Study\\React\\confusion\\src\\index.js",[],["76","77"],"E:\\Study\\React\\confusion\\src\\App.js",[],"E:\\Study\\React\\confusion\\src\\reportWebVitals.js",[],"E:\\Study\\React\\confusion\\src\\shared\\dishes.js",[],"E:\\Study\\React\\confusion\\src\\components\\DishdetailComponent.js",["78"],"import React from \"react\";\r\nimport { Card, CardImg, CardImgOverlay,Breadcrumb,BreadcrumbItem, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction RenderCom({ comments }) {\r\n    if (comments == null) {\r\n        return (<div></div>)\r\n    }\r\n    const cmnts = comments.map(comment => {\r\n        return (\r\n            <li key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                </p>\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <div className='col-12 col-md-5 m-1'>\r\n            <h4> Comments </h4>\r\n            <ul className='list-unstyled'>\r\n                {cmnts}\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish == null) {\r\n        return (\r\n            <div></div>\r\n        );\r\n\r\n    }\r\n    else {\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle> {dish.name}</CardTitle>\r\n                        <CardText> {dish.description} </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst DishDetail = (props) => {\r\n    const dish = props.dish;\r\n    if (dish == null) {\r\n        return (<div></div>);\r\n    }\r\n\r\n    const dishItem = <RenderDish dish={props.dish} />\r\n    const dishComment = <RenderCom comments={props.comments} />\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                {dishItem}\r\n                {dishComment}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DishDetail;\r\n","E:\\Study\\React\\confusion\\src\\components\\MainComponent.js",[],"E:\\Study\\React\\confusion\\src\\components\\headercomponent.js",["79","80"],"E:\\Study\\React\\confusion\\src\\components\\MenuComponent.js",["81","82"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction RenderMenuItem({dish}) {\r\n  return (\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n\r\n         <CardImgOverlay>\r\n           <CardTitle>{dish.name}</CardTitle>\r\n         </CardImgOverlay>\r\n        </Link>\r\n    </Card>\r\n  );\r\n\r\n}\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.map((dish) => {\r\n    //console.log(dish.id);\r\n    return (\r\n      <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n        <RenderMenuItem dish={dish} />\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n          <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>Menu</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {menu}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Menu;\r\n","E:\\Study\\React\\confusion\\src\\components\\Headercomponent.js",[],"E:\\Study\\React\\confusion\\src\\components\\FooterComponent.js",[],"E:\\Study\\React\\confusion\\src\\components\\HomeComponent.js",[],"E:\\Study\\React\\confusion\\src\\components\\ContactComponent.js",["83","84"],"import React, {Component} from 'react';\r\nimport { Breadcrumb,BreadcrumbItem,Button,Form,FormGroup,Label,Input,Col,FormFeedback} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email:'',\r\n            agree:false,\r\n            contactType:'Tel.',\r\n            message:'',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }\r\n      this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleblur = this.handleBlur.bind(this);\r\n        \r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.chacked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n    handleBlur =(field) =>(evt)=> {\r\n        this.setState ({\r\n            touched:{...this.state.touched,[field]:true}\r\n        });\r\n    }\r\n    validate(firstname,lastname,telnum,email) {\r\n        const errors ={\r\n            firstname:\"\",\r\n            lastname:\"\",\r\n            telnum: \"\",\r\n            email: \"\"\r\n        }\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n            </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                        <div className=\"col-12 col-md-9\">\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup row>\r\n                                    <Label htmlfor=\"firstname\" md={2}>First Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" value={this.state.firstname} valid={errors.firstname===''} invalid={errors.firstname!==\"\"} onChange={this.handleInputChange} onBlur={this.handleBlur('firstname')}/>\r\n                                        <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label htmlfor=\"lastname\" md={2}>Last Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"last Name\" value={this.state.lastname} onChange={this.handleInputChange}  valid={errors.lastname === ''} invalid={errors.lastname !== ''} onBlur={this.handleBlur('lastname')}/>\r\n                                        <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label htmlfor=\"telnum\" md={2}>Contect Tel.</Label>\r\n                                    <Col md={10}>\r\n                                        <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Contect Telephone\" value={this.state.telnum} onChange={this.handleInputChange}    value={this.state.telnum} valid={errors.telnum === ''} invalid={errors.telnum !== ''} onBlur={this.handleBlur('telnum')}/>\r\n                                        <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                                    <Col md={10}>\r\n                                        <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange} valid={errors.email === ''} invalid={errors.email !== ''} onBlur={this.handleBlur('email')} />\r\n                                        <FormFeedback>{errors.email}</FormFeedback>\r\n                                   </Col>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Col md={{size:6, offset:2}}>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} onChange={this.handleInputChange}/>\r\n                                                <strong>May we contact you?</strong>\r\n                                            </Label>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={{size:3, offset:2}}>\r\n                                        <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange}>\r\n                                            <option>Tel.</option>\r\n                                            <option>Email</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label htmlfor=\"message\" md={2}>Your feedback</Label>\r\n                                    <Col md={10}>\r\n                                        <Input type=\"textarea\" id=\"message\" name=\"message\" rows=\"12\" value={this.state.message} onChange={this.handleInputChange}/>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Col md={{size:10,offset:2}}>\r\n                                        <Button type=\"submit\" color=\"primary\" >\r\n                                            Send Feedback\r\n                                        </Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","E:\\Study\\React\\confusion\\src\\shared\\comments.js",[],["85","86"],"E:\\Study\\React\\confusion\\src\\shared\\promotions.js",[],"E:\\Study\\React\\confusion\\src\\shared\\leaders.js",[],"E:\\Study\\React\\confusion\\src\\components\\AboutComponent.js",[],"E:\\Study\\React\\confusion\\src\\components\\button.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":25,"nodeType":"93","messageId":"94","endLine":2,"endColumn":39},{"ruleId":"91","severity":1,"message":"95","line":2,"column":31,"nodeType":"93","messageId":"94","endLine":2,"endColumn":40},{"ruleId":"96","severity":1,"message":"97","line":6,"column":5,"nodeType":"98","messageId":"99","endLine":8,"endColumn":6},{"ruleId":"91","severity":1,"message":"100","line":2,"column":41,"nodeType":"93","messageId":"94","endLine":2,"endColumn":49},{"ruleId":"91","severity":1,"message":"101","line":2,"column":51,"nodeType":"93","messageId":"94","endLine":2,"endColumn":59},{"ruleId":"102","severity":1,"message":"103","line":114,"column":29,"nodeType":"104","endLine":114,"endColumn":71},{"ruleId":"105","severity":1,"message":"106","line":141,"column":180,"nodeType":"107","endLine":141,"endColumn":205},{"ruleId":"87","replacedBy":"108"},{"ruleId":"89","replacedBy":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'CardImgOverlay' is defined but never used.","Identifier","unusedVar","'jumbotron' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CardText' is defined but never used.","'CardBody' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["110"],["111"],"no-global-assign","no-unsafe-negation"]